{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "canadacentral"
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "[concat('ContainerAppEnv-', uniqueString(resourceGroup().id))]"
    },
    "publisherCI": {
      "type": "string",
      "defaultValue": "docker.io/gfakedocker/publishernodejs:latest"
    },
    "consumer1CI": {
      "type": "string",
      "defaultValue": "docker.io/gfakedocker/consumer1nodejs:latest"
    },
    "consumer2CI": {
      "type": "string",
      "defaultValue": "docker.io/gfakedocker/consumer2nodejs:latest"
    },
    "publisher": {
      "type": "string",
      "defaultValue": "publishernodejs"
    },
    "consumer1": {
      "type": "string",
      "defaultValue": "consumer1nodejs"
    },
    "consumer2": {
      "type": "string",
      "defaultValue": "consumer2nodejs"
    },
    "pubsubname": {
      "type": "String",
      "defaultValue": "mypubsub1"
    },
    "publisherId": {
      "type": "String",
      "defaultValue": "publisher"
    },
    "consumer1Id": {
      "type": "String",
      "defaultValue": "consumer1"
    },
    "consumer2Id": {
      "type": "String",
      "defaultValue": "consumer2"
    },
    "serviceBusNamespaceName": {
      "type": "string",
      "defaultValue": "[format('serviceBusNS-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Service Bus namespace"
      }
    },
    "serviceBusTopicName": {
      "type": "string",
      "defaultValue": "mytopic1",
      "metadata": {
        "description": "Name of the Topic"
      }
    },
    "usesWorkloadProfile": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "If you deployed a workload-profile enabled Container App Environment, set the usesWorkloadProfile parameter to true so that the Container App is deployed to the Consumption profile. Otherwise, if you deployed a Container App Environment without workload profiles enabled, set this parameter to false."
      }
    }
  },
  "variables": {
    "APP_PORT": "5000",
    "policy": "policy1"
  },
  "resources": [
    {
      "apiVersion": "2018-01-01-preview",
      "name": "[parameters('serviceBusNamespaceName')]",
      "type": "Microsoft.ServiceBus/namespaces",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      }
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('serviceBusNamespaceName'), '/', parameters('serviceBusTopicName'))]",
      "type": "Microsoft.ServiceBus/namespaces/topics",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]"
      ],
      "properties": {
        "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
        "maxSizeInMegabytes": 1024,
        "requiresDuplicateDetection": false,
        "duplicateDetectionHistoryTimeWindow": "PT10M",
        "enableBatchedOperations": false,
        "supportOrdering": false,
        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
        "enablePartitioning": false,
        "enableExpress": false
      }
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('serviceBusNamespaceName'), '/', parameters('serviceBusTopicName'), '/', variables('policy'))]",
      "type": "Microsoft.ServiceBus/namespaces/topics/authorizationRules",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/topics/', parameters('serviceBusNamespaceName'), parameters('serviceBusTopicName'))]"
      ],
      "properties": {
        "Rights": [
          "Send",
          "Listen",
          "Manage"
        ]
      }
    },
    {
      "apiVersion": "2023-05-01",
      "type": "Microsoft.App/managedEnvironments/daprComponents",
      "name": "[concat(parameters('environmentName'), '/', parameters('pubsubname'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/topics/authorizationRules',parameters('serviceBusNamespaceNAme'),parameters('serviceBusTopicName'),variables('policy'))]"
      ],
      "properties": {
        "componentType": "pubsub.azure.servicebus",
        "version": "v1",
        "ignoreErrors": false,
        "initTimeout": "50s",
        "secrets": [
          {
            "name": "sbconn1secret",
            "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/topics/authorizationRules',parameters('serviceBusNamespaceNAme'),parameters('serviceBusTopicName'),variables('policy')),'2017-04-01').secondaryConnectionString]"
          }
        ],
        "metadata": [
          {
            "name": "connectionString",
            "secretRef": "sbconn1secret"
          }
        ],
        "scopes": [
          "[parameters('publisherId')]",
          "[parameters('consumer1Id')]",
          "[parameters('consumer2Id')]"
        ]
      }
    },
    {
      "name": "[parameters('publisher')]",
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "kind": "containerapp",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments/daprComponents', parameters('environmentName'), parameters('pubsubname'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics/authorizationRules/', parameters('serviceBusNamespaceName'), parameters('serviceBusTopicName'), variables('policy'))]"
      ],
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
		"workloadProfileName": "[if(parameters('usesWorkloadProfile'), 'Consumption', json('null'))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": "[variables('APP_PORT')]"
          },
          "dapr": {
            "enabled": true,
            "appPort": "[variables('APP_PORT')]",
            "appId": "[parameters('publisherId')]"
          }
        },
        "template": {
          "containers": [
            {
              "name": "publisher",
              "image": "[parameters('publisherCI')]",
              "env": [
                {
                  "name": "APP_PORT",
                  "value": "[variables('APP_PORT')]"
                },
                {
                  "name": "SB_TOPIC",
                  "value": "[parameters('serviceBusTopicName')]"
                },
                {
                  "name": "PUBSUB_NAME",
                  "value": "[parameters('pubsubname')]"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "name": "[parameters('consumer1')]",
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "kind": "containerapp",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.App/containerApps/', parameters('publisher'))]"
      ],
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
		"workloadProfileName": "[if(parameters('usesWorkloadProfile'), 'Consumption', json('null'))]",
        "configuration": {
          "secrets": [
            {
              "name": "sbconn1secret",
              "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/topics/authorizationRules',parameters('serviceBusNamespaceName'),parameters('serviceBusTopicName'),variables('policy')),'2017-04-01').secondaryConnectionString]"
            }
          ],
          "dapr": {
            "enabled": true,
            "appPort": "[variables('APP_PORT')]",
            "appId": "[parameters('consumer1Id')]"
          }
        },
        "template": {
          "containers": [
            {
              "name": "consumer1",
              "image": "[parameters('consumer1CI')]",
              "env": [
                {
                  "name": "APP_PORT",
                  "value": "[variables('APP_PORT')]"
                },
                {
                  "name": "SB_TOPIC",
                  "value": "[parameters('serviceBusTopicName')]"
                },
                {
                  "name": "PUBSUB_NAME",
                  "value": "[parameters('pubsubname')]"
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": "1",
            "maxReplicas": "10",
            "rules": [
              {
                "name": "sbtopicscalingrule",
                "custom": {
                  "type": "azure-servicebus",
                  "metadata": {
                    "topicName": "[parameters('serviceBusTopicName')]",
                    "messageCount": "5"
                  },
                  "auth": [
                    {
                      "secretRef": "sbconn1secret",
                      "triggerParameter": "connection"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "[parameters('consumer2')]",
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "kind": "containerapp",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.App/containerApps/', parameters('consumer1'))]"
      ],
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
		"workloadProfileName": "[if(parameters('usesWorkloadProfile'), 'Consumption', json('null'))]",
        "configuration": {
          "secrets": [
            {
              "name": "sbconn1secret",
              "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/topics/authorizationRules',parameters('serviceBusNamespaceName'),parameters('serviceBusTopicName'),variables('policy')),'2017-04-01').secondaryConnectionString]"
            }
          ],
          "dapr": {
            "enabled": true,
            "appPort": "[variables('APP_PORT')]",
            "appId": "[parameters('consumer2Id')]"
          }
        },
        "template": {
          "containers": [
            {
              "name": "consumer2",
              "image": "[parameters('consumer2CI')]",
              "env": [
                {
                  "name": "APP_PORT",
                  "value": "[variables('APP_PORT')]"
                },
                {
                  "name": "SB_TOPIC",
                  "value": "[parameters('serviceBusTopicName')]"
                },
                {
                  "name": "PUBSUB_NAME",
                  "value": "[parameters('pubsubname')]"
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": "1",
            "maxReplicas": "10",
            "rules": [
              {
                "name": "sbtopicscalingrule",
                "custom": {
                  "type": "azure-servicebus",
                  "metadata": {
                    "topicName": "[parameters('serviceBusTopicName')]",
                    "messageCount": "5"
                  },
                  "auth": [
                    {
                      "secretRef": "sbconn1secret",
                      "triggerParameter": "connection"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  ]
}