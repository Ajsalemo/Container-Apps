{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
		"location": {
		  "type": "string",
		  "defaultValue": "canadacentral"
		},
		"environmentName": {
		  "type": "string",
		  "defaultValue": "[concat('ContainerAppEnv-', uniqueString(resourceGroup().id))]"
		},
		"workspaceName": {
		  "type": "string",
		  "defaultValue": "[concat('LAWorkspace-', uniqueString(resourceGroup().id))]"
		},
		"workspaceLocation": {
		  "type": "string",
		  "defaultValue": "canadacentral"
		},
		"redisCacheName": {
		  "type": "string",
		  "defaultValue": "[format('redisCache-{0}', uniqueString(resourceGroup().id))]",
		  "metadata": {
			"description": "Specify the name of the Azure Redis Cache to create."
		  }
		},
		"redisCacheSKU": {
		  "type": "string",
		  "defaultValue": "Basic",
		  "allowedValues": [
			"Basic",
			"Standard",
			"Premium"
		  ],
		  "metadata": {
			"description": "Specify the pricing tier of the new Azure Redis Cache."
		  }
		},
		"redisCacheFamily": {
		  "type": "string",
		  "defaultValue": "C",
		  "allowedValues": [
			"C",
			"P"
		  ],
		  "metadata": {
			"description": "Specify the family for the sku. C = Basic/Standard, P = Premium."
		  }
		},
		"redisCacheCapacity": {
		  "type": "int",
		  "defaultValue": 1,
		  "allowedValues": [
			0,
			1,
			2,
			3,
			4,
			5,
			6
		  ],
		  "metadata": {
			"description": "Specify the size of the new Azure Redis Cache instance. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)"
		  }
		},
		"enableNonSslPort": {
		  "type": "bool",
		  "defaultValue": false,
		  "metadata": {
			"description": "Specify a boolean value that indicates whether to allow access via non-SSL ports."
		  }
		},
		"containerimage1": {
		  "type": "string",
		  "defaultValue": "docker.io/gfakedocker/statefulappnodejs:latest"
		}
	},
    "variables": {
	  "APP_PORT": "5000"
	},
    "resources": [
		{
		  "type": "Microsoft.Cache/redis",
		  "apiVersion": "2020-06-01",
		  "name": "[parameters('redisCacheName')]",
		  "location": "[parameters('location')]",
		  "properties": {
			"enableNonSslPort": "[parameters('enableNonSslPort')]",
			"minimumTlsVersion": "1.2",
			"sku": {
			  "capacity": "[parameters('redisCacheCapacity')]",
			  "family": "[parameters('redisCacheFamily')]",
			  "name": "[parameters('redisCacheSKU')]"
			}
		  }
		},
		{
		  "apiVersion": "2020-08-01",
		  "name": "[parameters('workspaceName')]",
		  "type": "Microsoft.OperationalInsights/workspaces",
		  "location": "[parameters('workspaceLocation')]",
		  "properties": {
			"sku": {
			  "name": "PerGB2018"
			},
			"retentionInDays": 30
		  }
		},
		{
		  "apiVersion": "2021-03-01",
		  "name": "[parameters('environmentName')]",
		  "type": "Microsoft.Web/kubeEnvironments",
		  "location": "[parameters('location')]",
		  "dependsOn": [
			"[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
		  ],
		  "properties": {
			"type": "managed",
			"internalLoadBalancerEnabled": false,
			"appLogsConfiguration": {
			  "destination": "log-analytics",
			  "logAnalyticsConfiguration": {
				"customerId": "[reference(concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2020-08-01').customerId]",
				"sharedKey": "[listKeys(concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2020-08-01').primarySharedKey]"
			  }
			}
		  }
		},
		{
			"name": "statefulapp",
			"type": "Microsoft.Web/containerApps",
			"apiVersion": "2021-03-01",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Web/kubeenvironments/', parameters('environmentName'))]",
				"[parameters('redisCacheName')]"
			],
			"properties": {
				"kubeEnvironmentId": "[resourceId('Microsoft.Web/kubeEnvironments', parameters('environmentName'))]",
				"configuration": {
					"ingress": {
						"external": true,
						"targetPort": "[variables('APP_PORT')]"
					},
					"secrets": [
						{
							"name": "redishostsecret",
							"value": "[concat(reference(parameters('redisCacheName')).hostName, ':6380')]"
						},
						{
							"name": "redispasswordsecret",
							"value": "[listKeys(parameters('redisCacheName'), '2020-12-01').secondaryKey]"
						}
					]
				},
				"template": {
					"containers": [
						{
							"name": "statefulapp",
							"image": "[parameters('containerimage1')]"
						}
					],
					"scale": {
					  "minReplicas": 0,
					  "maxReplicas": 5, 
					  "rules": [
						  {
							"name": "httpscalingrule",
							"http": {
							  "metadata": {
								"concurrentRequests": "100"
							  }
							}
						  }
						]
					},
					"dapr": {
						"enabled": true,
						"appPort": "[variables('APP_PORT')]",
						"appId": "statefulapp",
						"components": [
							{
							  "name": "mystatestore",
							  "type": "state.redis",
							  "version": "v1",
							  "metadata": [
								{
								  "name": "redisHost",
								  "secretRef": "redishostsecret"
								},
								{
								  "name": "redisPassword",
								  "secretRef": "redispasswordsecret"
								},
								{
								  "name": "enableTLS",
								  "value": "true"
								}
							  ]
							}
						]
					}
				}
			}
		}
	]
}