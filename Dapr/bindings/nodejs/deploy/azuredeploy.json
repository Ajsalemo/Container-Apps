{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "defaultValue": "canadacentral",
      "type": "String"
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "[concat('ContainerAppEnv-', uniqueString(resourceGroup().id))]"
    },
    "bindingappCI": {
      "type": "String",
      "defaultValue": "docker.io/gfakedocker/bindingnodejs:latest"
    },
    "bindingapp": {
      "type": "String",
      "defaultValue": "bindingappnodejs"
    },
    "bindingappId": {
      "type": "String",
      "defaultValue": "bindingapp"
    },
    "inputbinding": {
      "type": "String",
      "defaultValue": "mybindingforinput"
    },
    "outputbinding": {
      "type": "String",
      "defaultValue": "mybindingforoutput"
    },
    "serviceBusNamespaceName": {
      "type": "string",
      "defaultValue": "[format('serviceBusNS-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Service Bus namespace"
      }
    },
    "serviceBusQueueName": {
      "type": "string",
      "defaultValue": "mysbqueue1",
      "metadata": {
        "description": "Name of the Service Bus queue"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('store{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Storage Account"
      }
    },
    "storageQueueName": {
      "type": "string",
      "defaultValue": "mystorequeue1",
      "metadata": {
        "description": "Name of the Storage queue"
      }
    },
    "useConsumptionWorkloadProfile": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "If you deployed a workload-profile enabled Container App Environment, set the useConsumptionWorkloadProfile parameter to true so that the Container App is deployed to the Consumption profile. Otherwise, if you deployed a Container App Environment without workload profiles enabled, set this parameter to false."
      }
    }
  },
  "variables": {
    "APP_PORT": "5000",
    "policy": "RootManageSharedAccessKey"
  },
  "resources": [
    {
      "apiVersion": "2018-01-01-preview",
      "name": "[parameters('serviceBusNamespaceName')]",
      "type": "Microsoft.ServiceBus/namespaces",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      }
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('serviceBusNamespaceName'), '/', parameters('serviceBusQueueName'))]",
      "type": "Microsoft.ServiceBus/namespaces/queues",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]"
      ],
      "properties": {
        "lockDuration": "PT5M",
        "maxSizeInMegabytes": 1024,
        "requiresDuplicateDetection": false,
        "requiresSession": false,
        "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
        "deadLetteringOnMessageExpiration": false,
        "duplicateDetectionHistoryTimeWindow": "PT10M",
        "maxDeliveryCount": 10,
        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
        "enablePartitioning": false,
        "enableExpress": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccountName'), '/default/', parameters('storageQueueName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "apiVersion": "2023-05-01",
      "type": "Microsoft.App/managedEnvironments/daprComponents",
      "name": "[concat(parameters('environmentName'), '/', parameters('inputbinding'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]"
      ],
      "properties": {
        "componentType": "bindings.azure.servicebusqueues",
        "version": "v1",
        "ignoreErrors": false,
        "initTimeout": "50s",
        "secrets": [
          {
            "name": "sbconn1secret",
            "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules',parameters('serviceBusNamespaceName'), variables('policy')),'2017-04-01').secondaryConnectionString]"
          }
        ],
        "metadata": [
          {
            "name": "connectionString",
            "secretRef": "sbconn1secret"
          },
          {
            "name": "queueName",
            "value": "[parameters('serviceBusQueueName')]"
          },
          {
            "name": "ttlInSeconds",
            "value": "60"
          }
        ],
        "scopes": [
          "[parameters('bindingappId')]"
        ]
      }
    },
    {
      "apiVersion": "2023-05-01",
      "type": "Microsoft.App/managedEnvironments/daprComponents",
      "name": "[concat(parameters('environmentName'), '/', parameters('outputbinding'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/queueServices/queues', parameters('storageAccountName'), 'default', parameters('storageQueueName'))]"
      ],
      "properties": {
        "componentType": "bindings.azure.storagequeues",
        "version": "v1",
        "ignoreErrors": false,
        "initTimeout": "50s",
        "secrets": [
          {
            "name": "storagename1secret",
            "value": "[parameters('storageAccountName')]"
          },
          {
            "name": "storageconn1secret",
            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-06-01').keys[1].value]"
          }
        ],
        "metadata": [
          {
            "name": "storageAccount",
            "secretRef": "storagename1secret"
          },
          {
            "name": "storageAccessKey",
            "secretRef": "storageconn1secret"
          },
          {
            "name": "queue",
            "value": "[parameters('storageQueueName')]"
          },
          {
            "name": "ttlInSeconds",
            "value": "600"
          }
        ],
        "scopes": [
          "[parameters('bindingappId')]"
        ]
      }
    },
    {
      "name": "[parameters('bindingapp')]",
      "type": "Microsoft.App/containerApps",
      "kind": "containerapps",
      "apiVersion": "2023-05-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments/daprComponents', parameters('environmentName'), parameters('inputbinding'))]",
        "[resourceId('Microsoft.App/managedEnvironments/daprComponents', parameters('environmentName'), parameters('outputbinding'))]"
      ],
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments/', parameters('environmentName'))]",
		"workloadProfileName": "[if(parameters('useConsumptionWorkloadProfile'), 'Consumption', json('null'))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": "[variables('APP_PORT')]"
          },
          "secrets": [
			  {
				"name": "sbconn1secret",
				"value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules',parameters('serviceBusNamespaceName'), variables('policy')),'2017-04-01').secondaryConnectionString]"
			  }
          ],
          "dapr": {
            "enabled": true,
            "appPort": "[variables('APP_PORT')]",
            "appId": "[parameters('bindingappId')]"
          }
        },
        "template": {
          "scale": {
            "minReplicas": "1",
            "maxReplicas": "10",
            "rules": [
              {
                "name": "cpusscalingrule",
                "custom": {
                  "type": "cpu",
                  "metadata": {
                    "type": "Utilization",
                    "value": "50"
                  }
                }
              },
              {
                "name": "sbqueuescalingrule",
                "custom": {
                  "type": "azure-servicebus",
                  "metadata": {
                    "queueName": "[parameters('serviceBusQueueName')]",
                    "messageCount": "5"
                  },
                  "auth": [
                    {
                      "secretRef": "sbconn1secret",
                      "triggerParameter": "connection"
                    }
                  ]
                }
              }
            ]
          },
          "containers": [
            {
              "name": "[parameters('bindingapp')]",
              "image": "[parameters('bindingappCI')]",
              "env": [
              ]
            }
          ]
        }
      }
    }
  ]
}