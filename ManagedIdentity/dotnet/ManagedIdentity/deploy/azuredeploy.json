{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "canadacentral"
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "[concat('ContainerAppEnv-', uniqueString(resourceGroup().id))]"
    },
    "identityappCI": {
      "type": "string",
      "defaultValue": "gfakedocker/managedidentitydotnet:latest"
    },
    "identityapp": {
      "type": "string",
      "defaultValue": "[concat('identityca1-', uniqueString(resourceGroup().id))]"
    },
    "ASPNETCORE_ENVIRONMENT": {
      "type": "string",
      "allowedValues": [
        "Production",
        "Development"
      ],
      "defaultValue": "Production"
    },
    "managedIdentityName": {
      "type": "string",
      "defaultValue": "[concat('containerappuseridentity-', uniqueString(resourceGroup().id))]"
    },
    "keyVaultName1": {
      "type": "string",
      "defaultValue": "[concat('keyvault1-', uniqueString(resourceGroup().id))]"
    },
    "usesWorkloadProfile": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "If you deployed a workload-profile enabled Container App Environment, set the usesWorkloadProfile parameter to true so that the Container App is deployed to the Consumption profile. Otherwise, if you deployed a Container App Environment without workload profiles enabled, set this parameter to false."
      }
    }
  },
  "variables": {
    "APP_PORT": "80"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[parameters('managedIdentityName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-11-01-preview",
      "name": "[parameters('keyVaultName1')]",
      "location": "[parameters('location')]",
      "properties": {
        "enableSoftDelete": false,
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[concat(parameters('keyVaultName1'), '/', 'secret1')]",
      "properties": {
        "value": "I like bacon."
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName1'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[concat(parameters('keyVaultName1'), '/', 'secret2')]",
      "properties": {
        "value": "Maple donuts."
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName1'), 'secret1')]"
      ]
    },
    {
      "name": "[parameters('identityapp')]",
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned,UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]": {}
        }
      },
      "dependsOn": [
		 "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName1'), 'secret2')]"
      ],
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
		"workloadProfileName": "[if(parameters('usesWorkloadProfile'), 'Consumption', json('null'))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": "[variables('APP_PORT')]"
          }
        },
        "template": {
          "containers": [
            {
              "name": "[parameters('identityapp')]",
              "image": "[parameters('identityappCI')]",
              "env": [
                {
                  "name": "ASPNETCORE_ENVIRONMENT",
                  "value": "[parameters('ASPNETCORE_ENVIRONMENT')]"
                },
                {
                  "name": "AZURE_KEYVAULT_RESOURCEENDPOINT",
                  "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName1'))).vaultUri]"
                },
                {
                  "name": "CLIENTID",
                  "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))).clientid]"
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": "0",
            "maxReplicas": "10",
            "rules": [
              {
                "name": "httpscalingrule",
                "http": {
                  "metadata": {
                    "concurrentRequests": "10"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2021-11-01-preview",
      "name": "[concat(parameters('keyVaultName1'), '/', 'add')]",
      "dependsOn": [
        "[concat('Microsoft.App/containerApps/', parameters('identityapp'))]"
      ],
      "properties": {
        "accessPolicies": [
          {
            "objectId": "[reference(concat('Microsoft.App/containerApps/', parameters('identityapp')), '2022-01-01-preview','Full').identity.principalId]",
            "permissions": {
              "secrets": [ "get" ]
            },
            "tenantId": "[subscription().tenantId]"
          },
          {
            "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))).principalId]",
            "permissions": {
              "secrets": [ "get" ]
            },
            "tenantId": "[subscription().tenantId]"
          }
        ]
      }
    }
  ]
}